# Phase 0: Technical Constraints and Architecture Decisions
# Technology stack and architectural boundaries for MVP

---
doc_type: TECHNICAL_CONSTRAINTS
template_version: 1.1.0
doc_title: "Phase 0 — Technical Constraints"
status: DRAFT
created_utc: "2025-10-08T11:28:00Z"
last_updated_utc: "2025-10-08T11:28:00Z"

authority_order:
  - "00_AI_AGENT_RULES.yml"
  - "BLUEPRINT"
  - "ARCHITECTURE"
  - "IMPLEMENTATION"
update_protocol: "tense_management"
audience: [copilot, ai_agents, human_developers, chairman]

# ==================
# TECHNOLOGY STACK
# ==================
technology_stack:
  runtime: "python==3.11"
  framework: "fastapi==0.104.1"
  discord_library: "discord.py==2.3.2"
  validation: "pydantic==2.4.2"
  server: "uvicorn==0.24.0"
  testing:
    - "pytest==7.4.3"
    - "pytest-asyncio==0.21.1"
    - "pytest-mock==3.12.0"
    - "pytest-cov==4.1.0"
  linting: "ruff>=0.1.3"
  typing: "mypy>=1.6.1 --strict"
  logging: "structlog==24.1.0"
  database: "none (stateless relay)"

# =========================
# ARCHITECTURAL PRINCIPLES
# =========================
architectural_principles:
  async_first: true
  stateless_design: true
  single_user: true
  mvp_focused: true
  fail_fast: true
  observable: true
  spec_as_law:
    description: "OpenAPI (consilium-openapi-v1.1.yaml) is authoritative for public behavior."
    conformance_checks:
      - "openapi-spec-validator consilium-openapi-v1.1.yaml"

# ==========================
# PERFORMANCE REQUIREMENTS
# ==========================
performance_requirements:
  response_time:
    api_endpoints_p95_ms: 200
    discord_message_posting_p95_ms: 500
  throughput:
    concurrent_conversations: 1
    messages_per_minute: 100
  resource_limits:
    memory_mb: 512
    cpu_cores: 1

# ==================
# MVP LIMITATIONS
# ==================
mvp_limitations:
  features:
    - "Single Discord server only"
    - "API key authentication only (no OAuth)"
    - "No persistence/search of messages"
    - "No advanced moderation/filtering"
  scalability:
    - "Single-user design (Chairman)"
    - "No horizontal scaling/clustering"
  security:
    - "Secrets only via environment variables; never logged"

# =========================
# DEPLOYMENT CONSTRAINTS
# =========================
deployment_constraints:
  target_platforms: ["Railway (primary)","Fly.io (alternative)","Local Docker"]
  environment:
    single_instance: true
    container_deployment: true
    secrets_management: "environment variables"
  health_probes:
    readiness: "GET /v1/system/health == 200"

# ===============
# CONFORMANCE
# ===============
conformance:
  openapi_contract: "consilium-openapi-v1.1.yaml"
  required_headers:
    auth: "X-Consilium-Api-Key"
    idempotency: "X-Idempotency-Key (optional)"
  error_model_keys: ["error","message","details"]
  validation:
    commands: |
      openapi-spec-validator consilium-openapi-v1.1.yaml
      ruff .
      mypy --strict .
      pytest -q --cov=src/api --cov=src/discord --cov-report=term-missing --cov-fail-under=80
    expected: "All checks succeed; coverage ≥80%."
  rollback: "git checkout -- 00_TECHNICAL_CONSTRAINTS.yml"

# ==================
# AI PARSING USAGE
# ==================
ai_parsing_usage:
  implementation_decisions: "technology_stack.*"
  design_boundaries: "architectural_principles.*"
  feature_scope: "mvp_limitations.features"
  performance_targets: "performance_requirements.*"
  deployment_guidelines: "deployment_constraints.*" 
  update_instructions: "Update when major changes occur or at phase transitions"
  review_frequency: "Review and update at the end of each phase or when major changes occur"
  deprecation_policy: "Remove deprecated features in major releases"
  