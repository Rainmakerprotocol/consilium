# Phase 2: Repository Scaffold - Architecture
# Technical design for project structure and development environment

phase_info:
  id: 2
  name: "Repository Scaffold"
  focus: "Project organization and development toolchain"
  
architectural_decisions:
  project_structure:
    package_organization:
      - "src/ layout for clear separation of source and tests"
      - "Namespace packages for logical module grouping"
      - "__init__.py files for explicit package definitions"
    module_hierarchy:
      api_layer: "FastAPI routes, dependencies, middleware"
      discord_layer: "Discord client, message handlers, rate limiting"
      core_layer: "Configuration, logging, utilities, exceptions"
      test_structure: "Mirror src/ structure with test_ prefix"
      
  dependency_management:
    package_strategy:
      - "pyproject.toml as single source of truth"
      - "Poetry for dependency resolution and virtual environment"
      - "Separate dev dependencies from production"
    version_pinning:
      - "Pin major versions for stability"
      - "Allow minor version updates for bug fixes"
      - "Lock file for reproducible builds"
      
  development_toolchain:
    code_quality:
      formatting: "black with 80-character line length"
      linting: "flake8 with custom configuration"
      type_checking: "mypy in strict mode with incremental checking"
    testing_framework:
      - "pytest with asyncio plugin for async testing"
      - "Coverage reporting with minimum thresholds"
      - "Test fixtures for common setup patterns"
    ci_cd_foundation:
      - "GitHub Actions workflow configuration"
      - "Automated testing on pull requests"
      - "Code quality checks as required status"
      
technical_specifications:
  configuration_management:
    settings_pattern:
      - "Pydantic BaseSettings for environment-based config"
      - "Hierarchical configuration with overrides"
      - "Validation and type safety for all settings"
    secret_management:
      - "Environment variables for sensitive data"
      - ".env files for local development"
      - "No secrets in version control"
      
  containerization_foundation:
    dockerfile_strategy:
      - "Multi-stage build for size optimization"
      - "Non-root user for security"
      - "Layer caching for fast rebuilds"
    development_environment:
      - "docker-compose for local service dependencies"
      - "Volume mounts for hot reloading"
      - "Environment parity between dev and production"
      
ai_parsing_usage:
  structure_requirements: "architectural_decisions.project_structure"
  toolchain_config: "architectural_decisions.development_toolchain"
  technical_foundation: "technical_specifications"