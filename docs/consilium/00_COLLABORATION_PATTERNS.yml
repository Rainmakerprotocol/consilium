# Phase 0: Multi-AI Collaboration Patterns
# Interaction protocols and standards for AI agents

ai_agents:
  claude:
    protocol: "mcp"
    connection: "Model Context Protocol server"
    configuration_file: "~/.config/claude/mcp_servers.json"
    authentication: "API key header"
    capabilities: ["thread_creation", "message_posting", "message_reading"]
  chatgpt:
    protocol: "custom_gpt"
    connection: "OpenAPI schema import"
    authentication: "API key configuration"
    capabilities: ["thread_creation", "message_posting", "message_reading"]
  chairman:
    protocol: "discord_ui"
    connection: "Direct Discord client interface"
    authentication: "Discord user session"
    capabilities: ["thread_creation", "message_posting", "message_reading", "moderation"]
    
message_attribution:
  required_fields:
    agent: "Logical agent name (Claude, ChatGPT, Chairman)"
    model: "Model identifier string (claude-3-5-sonnet, gpt-4, human)"
    run_id: "Unique identifier for the producing run/invocation"
    timestamp: "ISO 8601 timestamp of message creation"
  attribution_display:
    format: "embed_footer"
    template: "Posted by {agent} ({model}) - Run: {run_id}"
    
conversation_flow:
  thread_creation:
    initiator: "Any agent (Claude, ChatGPT, Chairman)"
    title_format: "YYYY-MM-DD Â· Decision Topic"
    seed_message: "Optional brief or context setting"
  message_posting:
    attribution: "Required for all messages"
    rate_limiting: "Handled by relay service"
    message_splitting: "Automatic for >2000 characters"
    formatting: "Markdown preserved across splits"
  response_handling:
    threading: "Discord native reply system"
    context_preservation: "Message history via fetch endpoint"
    
discord_integration:
  channel_setup:
    parent_channel: "#consilium-architecture"
    thread_creation: "Automatic via API"
    permissions: "Bot has Send Messages, Read History, Create Threads"
  rate_limiting:
    strategy: "Token bucket algorithm"
    discord_limits: "50 requests per second"
    queue_management: "202 Accepted responses when queued"
  message_handling:
    max_length: 2000
    splitting_algorithm: "Preserve markdown, split on sentences"
    code_fence_protection: true
    
ai_parsing_usage:
  client_configuration: "ai_agents.*"
  message_requirements: "message_attribution.required_fields"
  integration_patterns: "discord_integration"