---
doc_type: ARCHITECTURE
template_version: 1.1.0
architecture_id: "phase_07_architecture"
doc_title: "Phase 7 — Testing Suite — Architecture"
phase_id: "phase_07"
api_version: "v1.1"
status: "DRAFT"
created_utc: "2025-10-06T23:18:07Z"
last_updated_utc: "2025-10-06T23:18:07Z"
canonical_spec_path: "../../consilium-openapi-v1.1.yaml"

authority_order:
  - "00_AI_AGENT_RULES.md"
  - "BLUEPRINT"
  - "ARCHITECTURE"
  - "IMPLEMENTATION"

audience: [copilot, ai_agents, human_developers]
update_protocol: "tense_management"

cross_doc_relationship:
  consumes:
    - "./phase_07_BLUEPRINT.yaml"
    - "../00_parent/00_COPILOT_README.md"
  - "../../consilium-openapi-v1.1.yaml"
    - "./phase_05_BLUEPRINT.yaml"
    - "./phase_05_ARCHITECTURE.yaml"
    - "./phase_05_IMPLEMENTATION.yaml"
    - "./phase_06_BLUEPRINT.yaml"
    - "./phase_06_ARCHITECTURE.yaml"
    - "./phase_06_IMPLEMENTATION.yaml"
  produces:
    - "./phase_07_IMPLEMENTATION.yaml"
  updates:
    - "../TECHNICAL_DECISIONS.md"
    - "../PHASE_NOTES.md"

---

copilot_instructions: |
  1. Purpose: Define HOW to implement Phase 7 tests (unit/integration/e2e).
  2. Conformance: Validate against OpenAPI v1.1 models and Phase 5–6 behaviors.
  3. Tense: Future while DRAFT; convert to past tense when COMPLETE.
  4. Carry forward: Copy the Contract block verbatim from the Blueprint.
  5. Validation: CI Gate must be scriptable and deterministic with coverage.

sections:

  module_map: |
    tests/
      conftest.py
      test_models.py
      test_message_handler.py
      test_routes.py
      test_integration.py
    pytest.ini

  interfaces:
    rest_endpoints:
      - path: /v1/strategy/start-thread
        handler: "api.routes.start_thread()  # exercised via TestClient"
      - path: /v1/strategy/post
        handler: "api.routes.post_message()  # exercised via TestClient"
      - path: /v1/strategy/fetch
        handler: "api.routes.fetch_messages() # exercised via TestClient"
      - path: /v1/system/health
        handler: "api.routes.health()        # sanity checks only"
      - path: /v1/system/info
        handler: "api.routes.info()          # sanity checks only"
    internal_apis:
      - "discord.message_handler.split_message(content: str, max_length: int = 2000) -> list[str]"
      - "discord.message_handler.send_with_attribution(thread_id: str, content: str, author: Author, reply_to: str | None = None) -> list[str]"
      - "discord.client.DiscordClient.* (mocked for tests)"
      - "api.dependencies.verify_api_key(api_key: str | None) -> None"

  non_functional_requirements:
    - "Coverage ≥80% for src/api and src/discord (enforced with pytest-cov)."
    - "No live Discord calls; use mocks/fixtures for client and rate limiter."
    - "Async tests use pytest-asyncio; avoid time.sleep in favor of awaiting effects."
    - "Deterministic IDs/timestamps via fixtures; stable across runs."
    - "80-char lines; explicit type hints; Google-style docstrings in helpers."

  contract:                      # copied verbatim from Blueprint
    purpose: "Validate the relay’s behavior across layers (models, routes, message handling, client adapters) using deterministic tests and coverage, ensuring the implementation from Phases 5–6 conforms to spec and is regression-safe."
    inputs:
      - "../00_parent/00_COPILOT_README.md"
      - "../consilium-9_phase_plan.yml"
    - "../../consilium-openapi-v1.1.yaml"
      - "./phase_05_BLUEPRINT.yaml"
      - "./phase_05_ARCHITECTURE.yaml"
      - "./phase_05_IMPLEMENTATION.yaml"
      - "./phase_06_BLUEPRINT.yaml"
      - "./phase_06_ARCHITECTURE.yaml"
      - "./phase_06_IMPLEMENTATION.yaml"
    outputs:
      - "tests/conftest.py"
      - "tests/test_models.py"
      - "tests/test_message_handler.py"
      - "tests/test_routes.py"
      - "tests/test_integration.py"
      - "pytest.ini"
    acceptance:
      ci_gate: |
        python - <<'PY'
        import subprocess, sys
        cmd = [
          "pytest", "-q",
          "--cov=src/api", "--cov=src/discord",
          "--cov-report=term-missing", "--cov-fail-under=80"
        ]
        sys.exit(subprocess.call(cmd))
        PY
      expected: "All tests pass; coverage for src/api and src/discord ≥ 80%."
    rollback: "git checkout -- tests/ pytest.ini"

ci_gate:
  commands: |
    ruff check tests/
    mypy tests/ --ignore-missing-imports
    pytest -q --cov=src/api --cov=src/discord --cov-report=term-missing --cov-fail-under=80
  expected: "Linters/type checks succeed; tests pass; coverage ≥80%."

rollback_procedure:
  - "Revert files listed in Contract.outputs."
  - "If needed, reset to last passing commit."
