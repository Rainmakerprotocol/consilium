# Phase 6: Discord Integration - Blueprint
# Requirements and objectives for replacing mocks with real Discord

phase_info:
  id: 6
  name: "Discord Integration"
  purpose: "Replace mocks with real Discord"
  dependencies: ["phase_5", "phase_3"]
  
objectives:
  primary:
    - "Replace mock responses with Discord API calls"
    - "Implement Discord client connection management"
    - "Add message attribution via embeds"
    - "Handle Discord rate limiting properly"
  secondary:
    - "Implement message splitting for long content"
    - "Add connection recovery and error handling"
    - "Optimize Discord API usage patterns"
    
requirements:
  discord_client:
    connection_management:
      - "Persistent Discord client connection"
      - "Gateway connection monitoring and recovery"
      - "Proper client initialization and shutdown"
    bot_operations:
      - "Create threads in specified Discord channel"
      - "Post messages to threads with proper attribution"
      - "Fetch message history with pagination"
      
  message_attribution:
    embed_format:
      - "Discord embed footer with agent, model, run_id"
      - "Consistent attribution format across all messages"
      - "Preserve original message content in embed description"
    metadata_handling:
      - "Store attribution data for API responses"
      - "Parse attribution from existing messages"
      
  rate_limiting:
    discord_compliance:
      - "Respect Discord's 50 requests per second limit"
      - "Implement token bucket algorithm"
      - "Queue requests when limits approached"
    graceful_handling:
      - "Return 202 Accepted for queued requests"
      - "Provide request status polling if needed"
      
deliverables:
  - "Discord client integration replacing all mocks"
  - "Message attribution system using Discord embeds"
  - "Rate limiting implementation with token bucket"
  - "Message splitting for content >2000 characters"
  - "Connection management and error recovery"
  
validation_criteria:
  - "All API endpoints work with real Discord"
  - "Message attribution displays correctly in Discord"
  - "Rate limiting prevents Discord API violations"
  - "Long messages split properly while preserving formatting"
  - "Client handles connection drops and recovers gracefully"
  
ai_parsing_usage:
  integration_requirements: "requirements.discord_client"
  attribution_specs: "requirements.message_attribution"
  rate_limit_implementation: "requirements.rate_limiting"